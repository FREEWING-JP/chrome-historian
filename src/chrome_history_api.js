// Generated by CoffeeScript 1.7.1
(function() {
  var ChromeHistoryAPI;

  ChromeHistoryAPI = (function() {
    function ChromeHistoryAPI(chromeAPI) {
      this.chromeAPI = chromeAPI != null ? chromeAPI : chrome;
    }

    ChromeHistoryAPI.prototype.query = function(options, callback) {
      if (callback == null) {
        callback = function() {};
      }
      return this.chromeAPI.history.search(options, (function(_this) {
        return function(visits) {
          return callback(visits);
        };
      })(this));
    };

    ChromeHistoryAPI.prototype.deleteAll = function(callback) {
      if (callback == null) {
        callback = function() {};
      }
      return this.chromeAPI.history.deleteAll(function() {
        return callback();
      });
    };

    ChromeHistoryAPI.prototype.deleteUrl = function(url, callback) {
      if (callback == null) {
        callback = function() {};
      }
      if (url == null) {
        throw "Url needed";
      }
      return this.chromeAPI.history.deleteUrl({
        url: url
      }, function() {
        return callback();
      });
    };

    ChromeHistoryAPI.prototype.deleteRange = function(range, callback) {
      if (callback == null) {
        callback = function() {};
      }
      if (range.startTime == null) {
        throw "Start time needed";
      }
      if (range.endTime == null) {
        throw "End time needed";
      }
      return this.chromeAPI.history.deleteRange(range, (function(_this) {
        return function() {
          return callback();
        };
      })(this));
    };

    return ChromeHistoryAPI;

  })();

  module["export"] = ChromeHistoryAPI;

}).call(this);
